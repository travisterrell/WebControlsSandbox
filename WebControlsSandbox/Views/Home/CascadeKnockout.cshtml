@using TypeAhead.Models
@model TypeAhead.Models.WebControlsEntities

@{
    ViewBag.Title = "Cascading Dropdown with KnockoutJS - Web Controls Sandbox";
}

<h2>Cascading Dropdown</h2>

<fieldset>
    @Html.TextBoxFor(m => m.Clients, new { @autocomplete = "off", @class = "typeahead", @placeholder = "Client" })
</fieldset>


<fieldset @*data-bind="with: selectedClientId"*@>
    <select data-bind="
    options: adTags,
    value: selectedAdTag,
    optionsText: 'adTag',
    optionsCaption: 'Choose an AdTag',
    enable: selectedClientId"></select>  @*TODO: Determine what should go into "enable:" to make the dropdown enable upon selecting a client.*@
</fieldset>

<fieldset @*data-bind="with: selectedAdTag"*@>
    <select data-bind="
    options: adUnits,
    value: selectedAdUnit,
    optionsText: 'adUnit',
    optionsCaption: 'Choose an AdUnit',
    enable: selectedAdTag"></select>
</fieldset>

The following ClientId came from KO: <span data-bind="text: selectedClientId" type="text"></span>
<br/>
<p>...at 1:47 AM</p>


<script src="~/Scripts/typeahead.bundle.min.js"></script>
<script src="~/Scripts/knockout-3.3.0.debug.js"></script>

<script type="text/javascript">


    $(function () {
        function viewModel() {
            var self = this;
            self.adTags = [];
            self.adUnits = [];
            self.selectedClientId = ko.observable();
            self.selectedAdTag = ko.observable();
            self.selectedAdUnit = ko.observable();


            @*
            Things we may need:

            self.selectedClientId.subscribe(function (newText) {
                console.log(newText);
            });

            var getAdTags = $.getJSON('@Url.Action("GetAdTags", "Home")', function (data) {
            });

            // Here's how things are done on the Performance view:
            var viewModel = ko.mapping.fromJS(@Html.Raw(Json.Encode(Model.AdPerformanceSummary)));*@


        };

        viewModel = new viewModel();

        ko.applyBindings(viewModel);

        var onUpdated = function ($e, client) {
            viewModel.selectedClientId(client.Id);
        };

        var clients = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                url: '../GetNewClients?q=%QUERY',
                wildcard: '%QUERY'
            }
        });

        clients.initialize();

        $('#Clients').typeahead({
            hint: true,
            limit: 10,
            highlight: true,
            minLength: 1,
            matcher: function () { return true; }
        }, {
            name: 'Clients',
            displayKey: 'Name',
            source: clients.ttAdapter()
        })
            .on('typeahead:asyncrequest', function () {
                $('.tt-input').addClass('tt-spinner');
            })
            .on('typeahead:asynccancel typeahead:asyncreceive', function () {
                $('.tt-input').removeClass('tt-spinner');
            })
            .on("typeahead:select", onUpdated)
            .on('blur', function () {
                if ($('#Clients').val() === "") {
                    $('#idField').val("");
                }
            })
            .on('keypress', function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                if (keycode === '13') {
                    if ($('#Clients').val() === "") {
                        $('#idField').val("");
                    }
                }
            });
    });
</script>
<!--#endregion-->