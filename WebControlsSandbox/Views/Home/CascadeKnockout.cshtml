@using TypeAhead.Models
@model TypeAhead.Models.WebControlsEntities

@{
    ViewBag.Title = "Cascading Dropdown with KnockoutJS - Web Controls Sandbox";
}

<h2>Cascading Dropdown</h2>

<fieldset>
    @Html.TextBoxFor(m => m.Clients, new { @autocomplete = "off", @class = "typeahead", @placeholder = "Client" })
</fieldset>

<input data-bind="value: clientId " id="idField" class="typeahead" type="hidden" value="" disabled />

<fieldset data-bind="with: clientId">
    <select data-bind="
    options: adTag,
    value: selectedAdTag,
    optionsText: 'name',
    optionsCaption: 'Choose an AdTag',
    enable: selectedClient"></select>  @*TODO: Determine what should go into "enable:" to make the dropdown enable upon selecting a client.*@
</fieldset>

<fieldset data-bind="with: selectedAdTag">
    <select data-bind="
    options: adUnits,
    value: selectedAdUnit,
    optionsText: 'name',
    optionsCaption: 'Choose an AdUnit',
    enable: selectedAdTag"></select>
</fieldset>


<script src="~/Scripts/typeahead.bundle.min.js"></script>
<script src="~/Scripts/knockout-3.3.0.debug.js"></script>

@***********************************************************************************************@
@*  Cascading Dropdown Logic                                                                   *@
@***********************************************************************************************@
@*<script type="text/javascript">

    var cascade = function () {
        var self = this;
        self.clientId = ko.observable; // May need some extra work to get this going.
        self.selectedAdTag = ko.observable;
        self.selectedAdUnit = ko.observable;


        self.clientId.subscribe(function () {
            self.selectedAdTag(undefined);
        });
    };

    ko.applyBindings();

</script>*@



<!--#region Old Cascade Logic-->
@*<script type="text/javascript">
    $(function() {
        "use strict";

        function selectFromAjax(url, formData, target) {
            $(target).html("");
            if (formData.id) {
                $.ajax({
                    type: 'GET',
                    url: url,
                    data: formData,
                    success: function(data, textStatus) {
                        if (data) {
                            $(target).append($('<option></option>').attr("value", "").text("Select one"));
                            $(data.items).each(function() {
                                $(target).append($('<option></option>').attr("value", this.Value).text(this.Text));
                            });
                            $(target).change();
                        }
                    },
                    dataType: 'json'
                });
            } else {
                $(target).change();
            }
        }


        $('#AdTags').attr('disabled', true);
        var selector = {
            client: "select#@Html.IdFor(m => m.Clients)",
            adTag: "select#@Html.IdFor(m => m.AdTags)"
        }

        function getAdTags(id) {
            selectFromAjax('@Url.Action("GetAdTags", "Home")', { id: id }, $(selector.adTag));
            $('#AdTags').attr('disabled', false);
        };


        $('#AdUnits').attr('disabled', true);
        var selector1 = {
            adTag: "select#@Html.IdFor(m => m.AdTags)",
            adUnit: "select#@Html.IdFor(m => m.AdUnits)"
        }
        $(selector1.adTag).click(function() {
            selectFromAjax('@Url.Action("GetAdUnits", "Home")', { id: $(this).find("option:selected").val() }, $(selector1.adUnit));
            $('#AdUnits').attr('disabled', false);
        });
    })
</script>*@
<!--#endregion-->
<!--

-->
<!--#region Typeahead Logic-->
@***********************************************************************************************@
@*  Typeahead Logic                                                                            *@
@***********************************************************************************************@
<script type="text/javascript">

    var clients = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Name'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        remote: {
            url: '../GetNewClients?q=%QUERY',
            wildcard: '%QUERY'
        }
    });

    clients.initialize();

    function setHiddenValue(id, callback) {
        $('#idField').val(JSON.stringify(id));
        callback && callback(id);
    }

    $('#Clients').typeahead({
        hint: true,
        limit: 10,
        highlight: true,
        minLength: 1,
        matcher: function () { return true; }
    }, {
        name: 'Clients',
        displayKey: 'Name',
        source: clients.ttAdapter()
    })
        .on('typeahead:asyncrequest', function () {
            $('.tt-input').addClass('tt-spinner');
        })
        .on('typeahead:asynccancel typeahead:asyncreceive', function () {
            $('.tt-input').removeClass('tt-spinner');
        })
        .on("typeahead:select", function (obj, client) {
            setHiddenValue(client.Id);
        })
        .on('blur', function () {
            if ($('#Clients').val() === "") {
                $('#idField').val("");
            }
        })
        .on('keypress', function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode === '13') {
                if ($('#Clients').val() === "") {
                    $('#idField').val("");
                }
            }
        });
    </script>
<!--#endregion-->